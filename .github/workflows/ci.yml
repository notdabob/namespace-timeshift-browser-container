name: Code Quality and Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y nmap
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort pytest pytest-cov
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 src/ --count --exit-zero --max-complexity=10 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check --diff src/
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff src/
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t idrac-manager:test .
    
    - name: Test Docker container
      run: |
        # Start container in background
        docker run -d --name test-container -p 8080:80 -p 8765:8765 idrac-manager:test
        
        # Wait for container to start
        sleep 30
        
        # Test health endpoint
        curl -f http://localhost:8080/health || exit 1
        
        # Test API endpoint
        curl -f http://localhost:8765/status || exit 1
        
        # Cleanup
        docker stop test-container
        docker rm test-container